/*
Zinc Search engine API

Zinc Search engine API documents https://docs.zincsearch.com

API version: 0.3.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// MetaWildcardQuery struct for MetaWildcardQuery
type MetaWildcardQuery struct {
	Boost *float32 `json:"boost,omitempty"`
	Value *string `json:"value,omitempty"`
}

// NewMetaWildcardQuery instantiates a new MetaWildcardQuery object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetaWildcardQuery() *MetaWildcardQuery {
	this := MetaWildcardQuery{}
	return &this
}

// NewMetaWildcardQueryWithDefaults instantiates a new MetaWildcardQuery object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetaWildcardQueryWithDefaults() *MetaWildcardQuery {
	this := MetaWildcardQuery{}
	return &this
}

// GetBoost returns the Boost field value if set, zero value otherwise.
func (o *MetaWildcardQuery) GetBoost() float32 {
	if o == nil || o.Boost == nil {
		var ret float32
		return ret
	}
	return *o.Boost
}

// GetBoostOk returns a tuple with the Boost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaWildcardQuery) GetBoostOk() (*float32, bool) {
	if o == nil || o.Boost == nil {
		return nil, false
	}
	return o.Boost, true
}

// HasBoost returns a boolean if a field has been set.
func (o *MetaWildcardQuery) HasBoost() bool {
	if o != nil && o.Boost != nil {
		return true
	}

	return false
}

// SetBoost gets a reference to the given float32 and assigns it to the Boost field.
func (o *MetaWildcardQuery) SetBoost(v float32) {
	o.Boost = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *MetaWildcardQuery) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaWildcardQuery) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *MetaWildcardQuery) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *MetaWildcardQuery) SetValue(v string) {
	o.Value = &v
}

func (o MetaWildcardQuery) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Boost != nil {
		toSerialize["boost"] = o.Boost
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableMetaWildcardQuery struct {
	value *MetaWildcardQuery
	isSet bool
}

func (v NullableMetaWildcardQuery) Get() *MetaWildcardQuery {
	return v.value
}

func (v *NullableMetaWildcardQuery) Set(val *MetaWildcardQuery) {
	v.value = val
	v.isSet = true
}

func (v NullableMetaWildcardQuery) IsSet() bool {
	return v.isSet
}

func (v *NullableMetaWildcardQuery) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetaWildcardQuery(val *MetaWildcardQuery) *NullableMetaWildcardQuery {
	return &NullableMetaWildcardQuery{value: val, isSet: true}
}

func (v NullableMetaWildcardQuery) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetaWildcardQuery) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


