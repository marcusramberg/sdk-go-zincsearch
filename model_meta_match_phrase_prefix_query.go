/*
Zinc Search engine API

Zinc Search engine API documents https://docs.zincsearch.com

API version: 0.3.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// MetaMatchPhrasePrefixQuery struct for MetaMatchPhrasePrefixQuery
type MetaMatchPhrasePrefixQuery struct {
	Analyzer *string `json:"analyzer,omitempty"`
	Boost *float32 `json:"boost,omitempty"`
	Query *string `json:"query,omitempty"`
}

// NewMetaMatchPhrasePrefixQuery instantiates a new MetaMatchPhrasePrefixQuery object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetaMatchPhrasePrefixQuery() *MetaMatchPhrasePrefixQuery {
	this := MetaMatchPhrasePrefixQuery{}
	return &this
}

// NewMetaMatchPhrasePrefixQueryWithDefaults instantiates a new MetaMatchPhrasePrefixQuery object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetaMatchPhrasePrefixQueryWithDefaults() *MetaMatchPhrasePrefixQuery {
	this := MetaMatchPhrasePrefixQuery{}
	return &this
}

// GetAnalyzer returns the Analyzer field value if set, zero value otherwise.
func (o *MetaMatchPhrasePrefixQuery) GetAnalyzer() string {
	if o == nil || o.Analyzer == nil {
		var ret string
		return ret
	}
	return *o.Analyzer
}

// GetAnalyzerOk returns a tuple with the Analyzer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaMatchPhrasePrefixQuery) GetAnalyzerOk() (*string, bool) {
	if o == nil || o.Analyzer == nil {
		return nil, false
	}
	return o.Analyzer, true
}

// HasAnalyzer returns a boolean if a field has been set.
func (o *MetaMatchPhrasePrefixQuery) HasAnalyzer() bool {
	if o != nil && o.Analyzer != nil {
		return true
	}

	return false
}

// SetAnalyzer gets a reference to the given string and assigns it to the Analyzer field.
func (o *MetaMatchPhrasePrefixQuery) SetAnalyzer(v string) {
	o.Analyzer = &v
}

// GetBoost returns the Boost field value if set, zero value otherwise.
func (o *MetaMatchPhrasePrefixQuery) GetBoost() float32 {
	if o == nil || o.Boost == nil {
		var ret float32
		return ret
	}
	return *o.Boost
}

// GetBoostOk returns a tuple with the Boost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaMatchPhrasePrefixQuery) GetBoostOk() (*float32, bool) {
	if o == nil || o.Boost == nil {
		return nil, false
	}
	return o.Boost, true
}

// HasBoost returns a boolean if a field has been set.
func (o *MetaMatchPhrasePrefixQuery) HasBoost() bool {
	if o != nil && o.Boost != nil {
		return true
	}

	return false
}

// SetBoost gets a reference to the given float32 and assigns it to the Boost field.
func (o *MetaMatchPhrasePrefixQuery) SetBoost(v float32) {
	o.Boost = &v
}

// GetQuery returns the Query field value if set, zero value otherwise.
func (o *MetaMatchPhrasePrefixQuery) GetQuery() string {
	if o == nil || o.Query == nil {
		var ret string
		return ret
	}
	return *o.Query
}

// GetQueryOk returns a tuple with the Query field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaMatchPhrasePrefixQuery) GetQueryOk() (*string, bool) {
	if o == nil || o.Query == nil {
		return nil, false
	}
	return o.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (o *MetaMatchPhrasePrefixQuery) HasQuery() bool {
	if o != nil && o.Query != nil {
		return true
	}

	return false
}

// SetQuery gets a reference to the given string and assigns it to the Query field.
func (o *MetaMatchPhrasePrefixQuery) SetQuery(v string) {
	o.Query = &v
}

func (o MetaMatchPhrasePrefixQuery) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Analyzer != nil {
		toSerialize["analyzer"] = o.Analyzer
	}
	if o.Boost != nil {
		toSerialize["boost"] = o.Boost
	}
	if o.Query != nil {
		toSerialize["query"] = o.Query
	}
	return json.Marshal(toSerialize)
}

type NullableMetaMatchPhrasePrefixQuery struct {
	value *MetaMatchPhrasePrefixQuery
	isSet bool
}

func (v NullableMetaMatchPhrasePrefixQuery) Get() *MetaMatchPhrasePrefixQuery {
	return v.value
}

func (v *NullableMetaMatchPhrasePrefixQuery) Set(val *MetaMatchPhrasePrefixQuery) {
	v.value = val
	v.isSet = true
}

func (v NullableMetaMatchPhrasePrefixQuery) IsSet() bool {
	return v.isSet
}

func (v *NullableMetaMatchPhrasePrefixQuery) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetaMatchPhrasePrefixQuery(val *MetaMatchPhrasePrefixQuery) *NullableMetaMatchPhrasePrefixQuery {
	return &NullableMetaMatchPhrasePrefixQuery{value: val, isSet: true}
}

func (v NullableMetaMatchPhrasePrefixQuery) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetaMatchPhrasePrefixQuery) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


