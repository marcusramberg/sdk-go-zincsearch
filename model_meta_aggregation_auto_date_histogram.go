/*
Zinc Search engine API

Zinc Search engine API documents https://docs.zincsearch.com

API version: 0.3.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// MetaAggregationAutoDateHistogram struct for MetaAggregationAutoDateHistogram
type MetaAggregationAutoDateHistogram struct {
	Buckets *int32 `json:"buckets,omitempty"`
	Field *string `json:"field,omitempty"`
	// format key_as_string
	Format *string `json:"format,omitempty"`
	Keyed *bool `json:"keyed,omitempty"`
	// minute,hour,day,week,month,quarter,year
	MinimumInterval *string `json:"minimum_interval,omitempty"`
	// time_zone
	TimeZone *string `json:"time_zone,omitempty"`
}

// NewMetaAggregationAutoDateHistogram instantiates a new MetaAggregationAutoDateHistogram object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetaAggregationAutoDateHistogram() *MetaAggregationAutoDateHistogram {
	this := MetaAggregationAutoDateHistogram{}
	return &this
}

// NewMetaAggregationAutoDateHistogramWithDefaults instantiates a new MetaAggregationAutoDateHistogram object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetaAggregationAutoDateHistogramWithDefaults() *MetaAggregationAutoDateHistogram {
	this := MetaAggregationAutoDateHistogram{}
	return &this
}

// GetBuckets returns the Buckets field value if set, zero value otherwise.
func (o *MetaAggregationAutoDateHistogram) GetBuckets() int32 {
	if o == nil || o.Buckets == nil {
		var ret int32
		return ret
	}
	return *o.Buckets
}

// GetBucketsOk returns a tuple with the Buckets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaAggregationAutoDateHistogram) GetBucketsOk() (*int32, bool) {
	if o == nil || o.Buckets == nil {
		return nil, false
	}
	return o.Buckets, true
}

// HasBuckets returns a boolean if a field has been set.
func (o *MetaAggregationAutoDateHistogram) HasBuckets() bool {
	if o != nil && o.Buckets != nil {
		return true
	}

	return false
}

// SetBuckets gets a reference to the given int32 and assigns it to the Buckets field.
func (o *MetaAggregationAutoDateHistogram) SetBuckets(v int32) {
	o.Buckets = &v
}

// GetField returns the Field field value if set, zero value otherwise.
func (o *MetaAggregationAutoDateHistogram) GetField() string {
	if o == nil || o.Field == nil {
		var ret string
		return ret
	}
	return *o.Field
}

// GetFieldOk returns a tuple with the Field field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaAggregationAutoDateHistogram) GetFieldOk() (*string, bool) {
	if o == nil || o.Field == nil {
		return nil, false
	}
	return o.Field, true
}

// HasField returns a boolean if a field has been set.
func (o *MetaAggregationAutoDateHistogram) HasField() bool {
	if o != nil && o.Field != nil {
		return true
	}

	return false
}

// SetField gets a reference to the given string and assigns it to the Field field.
func (o *MetaAggregationAutoDateHistogram) SetField(v string) {
	o.Field = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *MetaAggregationAutoDateHistogram) GetFormat() string {
	if o == nil || o.Format == nil {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaAggregationAutoDateHistogram) GetFormatOk() (*string, bool) {
	if o == nil || o.Format == nil {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *MetaAggregationAutoDateHistogram) HasFormat() bool {
	if o != nil && o.Format != nil {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *MetaAggregationAutoDateHistogram) SetFormat(v string) {
	o.Format = &v
}

// GetKeyed returns the Keyed field value if set, zero value otherwise.
func (o *MetaAggregationAutoDateHistogram) GetKeyed() bool {
	if o == nil || o.Keyed == nil {
		var ret bool
		return ret
	}
	return *o.Keyed
}

// GetKeyedOk returns a tuple with the Keyed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaAggregationAutoDateHistogram) GetKeyedOk() (*bool, bool) {
	if o == nil || o.Keyed == nil {
		return nil, false
	}
	return o.Keyed, true
}

// HasKeyed returns a boolean if a field has been set.
func (o *MetaAggregationAutoDateHistogram) HasKeyed() bool {
	if o != nil && o.Keyed != nil {
		return true
	}

	return false
}

// SetKeyed gets a reference to the given bool and assigns it to the Keyed field.
func (o *MetaAggregationAutoDateHistogram) SetKeyed(v bool) {
	o.Keyed = &v
}

// GetMinimumInterval returns the MinimumInterval field value if set, zero value otherwise.
func (o *MetaAggregationAutoDateHistogram) GetMinimumInterval() string {
	if o == nil || o.MinimumInterval == nil {
		var ret string
		return ret
	}
	return *o.MinimumInterval
}

// GetMinimumIntervalOk returns a tuple with the MinimumInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaAggregationAutoDateHistogram) GetMinimumIntervalOk() (*string, bool) {
	if o == nil || o.MinimumInterval == nil {
		return nil, false
	}
	return o.MinimumInterval, true
}

// HasMinimumInterval returns a boolean if a field has been set.
func (o *MetaAggregationAutoDateHistogram) HasMinimumInterval() bool {
	if o != nil && o.MinimumInterval != nil {
		return true
	}

	return false
}

// SetMinimumInterval gets a reference to the given string and assigns it to the MinimumInterval field.
func (o *MetaAggregationAutoDateHistogram) SetMinimumInterval(v string) {
	o.MinimumInterval = &v
}

// GetTimeZone returns the TimeZone field value if set, zero value otherwise.
func (o *MetaAggregationAutoDateHistogram) GetTimeZone() string {
	if o == nil || o.TimeZone == nil {
		var ret string
		return ret
	}
	return *o.TimeZone
}

// GetTimeZoneOk returns a tuple with the TimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaAggregationAutoDateHistogram) GetTimeZoneOk() (*string, bool) {
	if o == nil || o.TimeZone == nil {
		return nil, false
	}
	return o.TimeZone, true
}

// HasTimeZone returns a boolean if a field has been set.
func (o *MetaAggregationAutoDateHistogram) HasTimeZone() bool {
	if o != nil && o.TimeZone != nil {
		return true
	}

	return false
}

// SetTimeZone gets a reference to the given string and assigns it to the TimeZone field.
func (o *MetaAggregationAutoDateHistogram) SetTimeZone(v string) {
	o.TimeZone = &v
}

func (o MetaAggregationAutoDateHistogram) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Buckets != nil {
		toSerialize["buckets"] = o.Buckets
	}
	if o.Field != nil {
		toSerialize["field"] = o.Field
	}
	if o.Format != nil {
		toSerialize["format"] = o.Format
	}
	if o.Keyed != nil {
		toSerialize["keyed"] = o.Keyed
	}
	if o.MinimumInterval != nil {
		toSerialize["minimum_interval"] = o.MinimumInterval
	}
	if o.TimeZone != nil {
		toSerialize["time_zone"] = o.TimeZone
	}
	return json.Marshal(toSerialize)
}

type NullableMetaAggregationAutoDateHistogram struct {
	value *MetaAggregationAutoDateHistogram
	isSet bool
}

func (v NullableMetaAggregationAutoDateHistogram) Get() *MetaAggregationAutoDateHistogram {
	return v.value
}

func (v *NullableMetaAggregationAutoDateHistogram) Set(val *MetaAggregationAutoDateHistogram) {
	v.value = val
	v.isSet = true
}

func (v NullableMetaAggregationAutoDateHistogram) IsSet() bool {
	return v.isSet
}

func (v *NullableMetaAggregationAutoDateHistogram) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetaAggregationAutoDateHistogram(val *MetaAggregationAutoDateHistogram) *NullableMetaAggregationAutoDateHistogram {
	return &NullableMetaAggregationAutoDateHistogram{value: val, isSet: true}
}

func (v NullableMetaAggregationAutoDateHistogram) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetaAggregationAutoDateHistogram) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


