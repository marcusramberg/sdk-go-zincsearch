/*
Zinc Search engine API

Zinc Search engine API documents https://docs.zincsearch.com

API version: 0.3.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// MetaIndexSettings struct for MetaIndexSettings
type MetaIndexSettings struct {
	Analysis *MetaIndexAnalysis `json:"analysis,omitempty"`
	NumberOfReplicas *int32 `json:"number_of_replicas,omitempty"`
	NumberOfShards *int32 `json:"number_of_shards,omitempty"`
}

// NewMetaIndexSettings instantiates a new MetaIndexSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetaIndexSettings() *MetaIndexSettings {
	this := MetaIndexSettings{}
	return &this
}

// NewMetaIndexSettingsWithDefaults instantiates a new MetaIndexSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetaIndexSettingsWithDefaults() *MetaIndexSettings {
	this := MetaIndexSettings{}
	return &this
}

// GetAnalysis returns the Analysis field value if set, zero value otherwise.
func (o *MetaIndexSettings) GetAnalysis() MetaIndexAnalysis {
	if o == nil || o.Analysis == nil {
		var ret MetaIndexAnalysis
		return ret
	}
	return *o.Analysis
}

// GetAnalysisOk returns a tuple with the Analysis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaIndexSettings) GetAnalysisOk() (*MetaIndexAnalysis, bool) {
	if o == nil || o.Analysis == nil {
		return nil, false
	}
	return o.Analysis, true
}

// HasAnalysis returns a boolean if a field has been set.
func (o *MetaIndexSettings) HasAnalysis() bool {
	if o != nil && o.Analysis != nil {
		return true
	}

	return false
}

// SetAnalysis gets a reference to the given MetaIndexAnalysis and assigns it to the Analysis field.
func (o *MetaIndexSettings) SetAnalysis(v MetaIndexAnalysis) {
	o.Analysis = &v
}

// GetNumberOfReplicas returns the NumberOfReplicas field value if set, zero value otherwise.
func (o *MetaIndexSettings) GetNumberOfReplicas() int32 {
	if o == nil || o.NumberOfReplicas == nil {
		var ret int32
		return ret
	}
	return *o.NumberOfReplicas
}

// GetNumberOfReplicasOk returns a tuple with the NumberOfReplicas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaIndexSettings) GetNumberOfReplicasOk() (*int32, bool) {
	if o == nil || o.NumberOfReplicas == nil {
		return nil, false
	}
	return o.NumberOfReplicas, true
}

// HasNumberOfReplicas returns a boolean if a field has been set.
func (o *MetaIndexSettings) HasNumberOfReplicas() bool {
	if o != nil && o.NumberOfReplicas != nil {
		return true
	}

	return false
}

// SetNumberOfReplicas gets a reference to the given int32 and assigns it to the NumberOfReplicas field.
func (o *MetaIndexSettings) SetNumberOfReplicas(v int32) {
	o.NumberOfReplicas = &v
}

// GetNumberOfShards returns the NumberOfShards field value if set, zero value otherwise.
func (o *MetaIndexSettings) GetNumberOfShards() int32 {
	if o == nil || o.NumberOfShards == nil {
		var ret int32
		return ret
	}
	return *o.NumberOfShards
}

// GetNumberOfShardsOk returns a tuple with the NumberOfShards field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaIndexSettings) GetNumberOfShardsOk() (*int32, bool) {
	if o == nil || o.NumberOfShards == nil {
		return nil, false
	}
	return o.NumberOfShards, true
}

// HasNumberOfShards returns a boolean if a field has been set.
func (o *MetaIndexSettings) HasNumberOfShards() bool {
	if o != nil && o.NumberOfShards != nil {
		return true
	}

	return false
}

// SetNumberOfShards gets a reference to the given int32 and assigns it to the NumberOfShards field.
func (o *MetaIndexSettings) SetNumberOfShards(v int32) {
	o.NumberOfShards = &v
}

func (o MetaIndexSettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Analysis != nil {
		toSerialize["analysis"] = o.Analysis
	}
	if o.NumberOfReplicas != nil {
		toSerialize["number_of_replicas"] = o.NumberOfReplicas
	}
	if o.NumberOfShards != nil {
		toSerialize["number_of_shards"] = o.NumberOfShards
	}
	return json.Marshal(toSerialize)
}

type NullableMetaIndexSettings struct {
	value *MetaIndexSettings
	isSet bool
}

func (v NullableMetaIndexSettings) Get() *MetaIndexSettings {
	return v.value
}

func (v *NullableMetaIndexSettings) Set(val *MetaIndexSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableMetaIndexSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableMetaIndexSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetaIndexSettings(val *MetaIndexSettings) *NullableMetaIndexSettings {
	return &NullableMetaIndexSettings{value: val, isSet: true}
}

func (v NullableMetaIndexSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetaIndexSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


